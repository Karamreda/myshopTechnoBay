@model IEnumerable<Product>
@using X.PagedList.Mvc.Core;
@using X.PagedList;
@using X.PagedList.Web.Common;
@using myshop.Utilities

<section class="py-5" id="products">
    <div class="container px-4 px-lg-5 mt-5">
        <!-- Section Heading -->
        <div class="text-center mb-5">
            <h2 class="section-title fw-bold">Our Products</h2>
            <p class="text-muted">Discover our latest tech collection</p>
        </div>

        <div class="row gx-4 gx-lg-5 row-cols-2 row-cols-md-3 row-cols-xl-4 justify-content-center">
            @foreach (var item in Model)
            {
                <div class="col mb-5">
                    <div class="card h-100 product-card" data-id="@item.Id">
                        <!-- Product image with frame -->
                        <div class="position-relative overflow-hidden product-image-frame">
                            <img class="card-img-top" src="~/@item.Img" alt="@item.Name">
                            <div class="product-frame-overlay"></div>
                            <div class="product-badge">
                                <i class="bi bi-star-fill"></i> New
                            </div>
                        </div>

                        <!-- Product details-->
                        <div class="card-body p-4">
                            <div class="text-center">
                                <!-- Product name-->
                                <h5 class="card-title fw-bold mb-3">@item.Name</h5>
                                <!-- Product price-->
                                <div class="d-flex justify-content-center align-items-center">
                                    <span class="text-primary fw-bold fs-5">$@item.Price.ToString("0.00")</span>
                                </div>
                            </div>
                        </div>

                        <!-- Product actions-->
                        <div class="card-footer p-4 pt-0 border-top-0 bg-transparent">
                            <div class="text-center">
                                <a asp-action="Details" asp-route-ProductId="@item.Id"
                                   class="btn btn-primary btn-sm px-4 py-2 rounded-pill">
                                    <i class="bi bi-eye me-1"></i> View Details
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Pagination -->
        <div class="d-flex justify-content-center mt-5">
            @Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page = page }),
                     new PagedListRenderOptions
            {
                LiElementClasses = new string[] { "page-item" },
                PageClasses = new string[] { "page-link" },
                ContainerDivClasses = new string[] { "pagination pagination-lg" },
                DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
                DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
                DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                DisplayLinkToNextPage = PagedListDisplayMode.Always,
                MaximumPageNumbersToDisplay = 5,
                LinkToFirstPageFormat = "«",
                LinkToPreviousPageFormat = "‹",
                LinkToNextPageFormat = "›",
                LinkToLastPageFormat = "»"
            })
        </div>
    </div>
</section>

<style>
    /* Product Card Styles */
    .product-card {
        border: none;
        border-radius: 16px;
        overflow: hidden;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.05);
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        background: white;
        cursor: pointer;
        position: relative;
    }

        .product-card::before {
            content: '';
            position: absolute;
            inset: 0;
            border-radius: 16px;
            padding: 2px;
            background: linear-gradient(135deg, #8b5cf6, #3b82f6);
            -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
            -webkit-mask-composite: xor;
            mask-composite: exclude;
            pointer-events: none;
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .product-card:hover::before {
            opacity: 1;
        }

        .product-card:hover {
            transform: translateY(-10px) scale(1.02);
            box-shadow: 0 15px 40px rgba(139, 92, 246, 0.2);
        }

    /* Product Image Frame */
    .product-image-frame {
        position: relative;
        height: 220px;
        overflow: hidden;
        border-radius: 14px 14px 0 0;
    }

        .product-image-frame img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.5s ease, filter 0.3s ease;
        }

    .product-frame-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(to bottom, rgba(139, 92, 246, 0.1), rgba(59, 130, 246, 0.2));
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .product-card:hover .product-frame-overlay {
        opacity: 1;
    }

    .product-card:hover .card-img-top {
        transform: scale(1.1);
        filter: brightness(1.05);
    }

    /* Product Badge */
    .product-badge {
        position: absolute;
        top: 10px;
        right: 10px;
        background: linear-gradient(135deg, #8b5cf6, #3b82f6);
        color: white;
        padding: 5px 10px;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 600;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        transform: translateY(-10px);
        opacity: 0;
        transition: all 0.3s ease;
    }

    .product-card:hover .product-badge {
        transform: translateY(0);
        opacity: 1;
    }

    /* Section Title */
    .section-title {
        font-family: 'Space Grotesk', sans-serif;
        font-size: 2.5rem;
        font-weight: 700;
        background: linear-gradient(135deg, #8b5cf6, #3b82f6);
        -webkit-background-clip: text;
        background-clip: text;
        -webkit-text-fill-color: transparent;
        margin-bottom: 1rem;
        position: relative;
        display: inline-block;
    }

        .section-title::after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 50%;
            transform: translateX(-50%);
            width: 80px;
            height: 4px;
            background: linear-gradient(135deg, #8b5cf6, #3b82f6);
            border-radius: 2px;
        }

    /* Pagination Styles */
    .pagination-lg .page-link {
        padding: 0.75rem 1.25rem;
        font-size: 1.1rem;
        border-radius: 12px !important;
        margin: 0 5px;
        border: none;
    }

    .page-item.active .page-link {
        background: linear-gradient(135deg, #8b5cf6, #3b82f6);
        color: white;
        border: none;
    }

    .page-item:not(.active) .page-link {
        color: #8b5cf6;
        background: rgba(139, 92, 246, 0.1);
    }

        .page-item:not(.active) .page-link:hover {
            background: rgba(139, 92, 246, 0.2);
        }
</style>

<script>
    // Smooth transition when clicking on product card
    document.querySelectorAll('.product-card').forEach(card => {
        card.addEventListener('click', function(e) {
            if (e.target.tagName === 'A' || e.target.closest('a')) return;

            const productId = this.getAttribute('data-id');
            if (!productId) return;

            const productUrl = `/Customer/Product/Details/${productId}`;

            document.body.style.opacity = '0.8';
            document.body.style.transition = 'opacity 0.3s ease';

            setTimeout(() => {
                window.location.href = productUrl;
            }, 300);
        });
    });

    // Animation for product cards with staggered delay
    document.querySelectorAll('.product-card').forEach((card, index) => {
        card.style.opacity = '0';
        card.style.transform = 'translateY(30px) rotate(2deg)';
        card.style.transition = 'all 0.6s cubic-bezier(0.4, 0, 0.2, 1)';

        setTimeout(() => {
            card.style.opacity = '1';
            card.style.transform = 'translateY(0) rotate(0)';
        }, index * 100);
    });

    // Add hover effect to pagination items
    document.querySelectorAll('.page-item').forEach(item => {
        item.addEventListener('mouseenter', function() {
            this.style.transform = 'translateY(-3px)';
            this.style.transition = 'transform 0.2s ease';
        });

        item.addEventListener('mouseleave', function() {
            this.style.transform = 'translateY(0)';
        });
    });
</script>